<%
  # app/views/integrations/housecall/webhooks/_edit.html.erb
  #
  # Example:
  #   render partial: 'integrations/housecall/webhooks/edit', locals: { presenter: Presenter }
  #
  # Instance Variables:
  #   (req) @client_api_integrations: (ClientApiIntegrations)
  #
  # Local Variables:
  #   none
  #
  presenter = local_assigns.dig(:presenter) || Integrations::Housecall::Presenter.new(client_api_integration: @client_api_integration)
  presenter.event = @webhook
  presenter.webhook = @webhook&.second
-%>
<td colspan="9">
  <div class="row">
    <div class="col-2 text-center p-3">
      <div class="tile tile-xl tile-circle <%= bubble_color -%> mb-2">
        <%= presenter.webhook_name.to_s.split.pluck(0)[...3].join -%>
      </div>
      <h3 class="card-title mb-4"> <%= presenter.webhook_name -%> </h3>
    </div>

    <div class="col-10 p-3">

      <%= form_with url: presenter.form_url, builder: LooperFormBuilder, remote: true, method: presenter.form_method, class: 'needs-validation', novalidate: true do |f| %>

        <%= bootstrap_select_tag(
              field:        'webhook[event]',
              label:        { title: 'Housecall Pro Event' },
              html_options: { id: "event_#{presenter.webhook_id}" },
              options:      { array: presenter.webhook_events_array, selected: presenter.event_name, blank: 'Select a Housecall Pro Event' }
            ) %>
        <%= bootstrap_select_tag(
              field:        'webhook[criteria][lead_sources]',
              row:          { id: "lead_sources_#{presenter.webhook_id}" },
              label:        { title: 'Lead Sources' },
              html_options: { multiple: true },
              options:      { for_select: options_for_lead_source(presenter.client, presenter.webhook_event_lead_sources), blank: 'Any Lead Source' },
              messages:     { note: 'Event actions will trigger when Contact includes any of the selected lead sources.' }
            ) %>
        <%= bootstrap_select_tag(
              field:        'webhook[criteria][line_items]',
              row:          { id: "row_line_items_#{presenter.webhook_id}" },
              label:        { title: 'Housecall Pro Line Items' },
              html_options: { multiple: true },
              options:      { grouped_array: presenter.price_book_grouped_for_select, selected: presenter.webhook_line_items },
              messages:     { note: 'Event actions will trigger when job includes any of the selected line items.' }
            ) %>
        <span id="webhooks_ext_tech_ids_<%= presenter.webhook_id -%>">
          <%= render partial: 'integrations/housecall/webhooks/technicians', locals: { presenter: } %>
        </span>
        <%= bootstrap_select_tag(
              field:        'webhook[criteria][tag_ids_include]',
              label:        { title: "#{I18n.t('tenant.name')} Tags Included" },
              options:      { for_select: options_for_tag(presenter.client, presenter.webhook.dig(:criteria, :tag_ids_include) || [], [], false) },
              html_options: { multiple: true },
              messages:     { note: 'Event actions will trigger if any of the selected Tags are received from HCP (MUST be exact match).' }
            ) %>
        <%= bootstrap_select_tag(
              field:        'webhook[criteria][tag_ids_exclude]',
              label:        { title: "#{I18n.t('tenant.name')} Tags Excluded" },
              options:      { for_select: options_for_tag(presenter.client, presenter.webhook.dig(:criteria, :tag_ids_exclude) || [], [], false) },
              html_options: { multiple: true },
              messages:     { note: 'Event actions will NOT trigger if any of the selected Tags are received from HCP (MUST be exact match).' }
            ) %>
        <%= bootstrap_select_tag(
              field:        'webhook[criteria][approval_status]',
              row:          { id: "row_approval_status_#{presenter.webhook_id}" },
              label:        { title: 'Estimate Approval Status' },
              html_options: { multiple: true },
              options:      { array: presenter.estimate_approval_status_options, selected: presenter.webhook_approval_status },
              messages:     { note: 'Event actions will trigger when estimate option approvals match any of the selected statuses.' }
            ) %>
        <%= bootstrap_switch_field(
              field:        'webhook[criteria][event_new]',
              value:        presenter.webhook_event_new,
              values:       [true, false],
              row:          { id: "row_event_new_#{presenter.webhook_id}" },
              label:        { title: 'First Event' },
              html_options: { id: "event_new_#{presenter.webhook_id}" },
              messages:     { note: 'Event actions will trigger only on receipt of first event.' }
            ) %>
        <%= bootstrap_switch_field(
              field:        'webhook[criteria][event_updated]',
              value:        presenter.webhook_event_updated,
              values:       [true, false],
              row:          { id: "row_event_updated_#{presenter.webhook_id}" },
              label:        { title: 'Subsequent Events' },
              html_options: { id: "event_updated_#{presenter.webhook_id}" },
              messages:     { note: 'Event actions will trigger on receipt of all subsequent events.' }
            ) %>
        <%#= bootstrap_switch_field(
              field:    'webhook[criteria][tech_updated]',
              value:    presenter.webhook_tech_updated,
              values:   [true, false],
              row:      { id: "row_tech_updated_#{presenter.webhook_id}" },
              label:    { title: 'Technician Changed' },
              messages: { note: 'Event actions will trigger on receipt of all subsequent events received where the technician has changed.' }
            ) %>
        <%#= bootstrap_switch_field(
              field:    'webhook[criteria][start_date_updated]',
              value:    presenter.webhook_start_date_updated,
              values:   [true, false],
              row:      { id: "row_start_date_updated_#{presenter.webhook_id}" },
              label:    { title: 'Start Date Changed' },
              messages: { note: 'Event actions will trigger on receipt of all subsequent events received where the scheduled start date has changed.' }
            ) %>

        <fieldset class="border rounded p-2 mt-3 mb-2">
          <legend class="w-auto mb-0"><h6>Event Actions</h6></legend>

          <%= bootstrap_switch_field(
                field:    'webhook[actions][assign_user]',
                value:    presenter.webhook.dig(:actions, :assign_user).to_bool,
                values:   [true, false],
                label:    { title: 'Assign Contact to Employee' },
                messages: { note: "Employee must be matched to a #{I18n.t('tenant.name')} User." }
              ) %>

          <%= render partial: 'campaigns/action_fields', locals: {
                client: presenter.client,
                campaign: presenter.webhook_campaign, campaign_id_field: 'webhook[actions][campaign_id]',
                group: presenter.webhook_group, group_id_field: 'webhook[actions][group_id]',
                tag: presenter.webhook_tag, tag_id_field: 'webhook[actions][tag_id]',
                stage: presenter.webhook_stage, stage_id_field: 'webhook[actions][stage_id]',
                stop_campaign_ids: presenter.webhook_stop_campaign_ids, stop_campaign_ids_field: 'webhook[actions][stop_campaign_ids]',
                first_trigger_types: [115, 120, 125, 130, 135, 137, 140, 145, 146]
              } %>
        </fieldset>

        <%= bootstrap_submit_buttons(
              buttons: [{ title: "Save Actions for #{presenter.webhook_name.titleize} Event", disable_with: "Saving Actions for #{presenter.webhook_name.titleize} Event" }]
            ) %>
      <% end %>
    </div>
  </div>
</td>

<script>
  $(function () {
    formOptionsController('<%= presenter.webhook_id -%>');

    $(document).off('change', '#event_<%= presenter.webhook_id -%>');
    $(document).on('change', '#event_<%= presenter.webhook_id -%>', function(e) {
      e.preventDefault();
      formOptionsController('<%= presenter.webhook_id -%>');
    });

    $(document).off('change', '#event_new_<%= presenter.webhook_id -%>');
    $(document).on('change', '#event_new_<%= presenter.webhook_id -%>', function(e) {
      eventNewToggle('<%= presenter.webhook_id -%>');
    });

    $(document).off('change', '#event_updated_<%= presenter.webhook_id -%>');
    $(document).on('change', '#event_updated_<%= presenter.webhook_id -%>', function(e) {
      eventUpdatedToggle('<%= presenter.webhook_id -%>');
      formOptionsController('<%= presenter.webhook_id -%>');
    });
  });
</script>
