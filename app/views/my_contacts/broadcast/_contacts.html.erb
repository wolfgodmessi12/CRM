<%
   # app/views/my_contacts/broadcast/_contacts.html.erb
   #
   # Example:
   #   render partial: 'my_contacts/broadcast/contacts', locals: { presenter: MyContacts::Presenter }
   #
   # Instance Variables:
   #   none
   #
   # Local Variables:
   #   (req) presenter: (MyContacts::Presenter)
   #
   return unless local_assigns.dig(:presenter).is_a?(MyContacts::Presenter)
-%>
<% if presenter.contacts.any? %>
  <%= render partial: 'snippets/paginate', locals: {
        page_label:  'Contacts per page',
        per_page:    @user_setting.data[:per_page],
        object:      presenter.contacts,
        path_params: { controller: 'my_contacts', action: 'contacts', id: @user_setting.id, broadcast: presenter.broadcast },
        div_class:   'justify-content-end',
        remote:      false,
        turbo:       true
      } %>

  <div class="table-responsive">
    <table class="table">

      <thead>
        <% if presenter.broadcast %>
          <tr>
            <th colspan="6" class="align-left px-2">
              <div class="d-flex flex-row">
                <div class="thead-dd dropdown">
                  <span class="custom-control custom-control-nolabel custom-checkbox">
                    <input type="checkbox" name="select_all_switch" value="false" class="custom-control-input" id="select_switch">
                    <label class="custom-control-label" for="select_switch"></label>
                  </span>
                  <div class="thead-btn" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span class="selected-row-info text-muted pl-1" id="select_switch_selected_count">Select Contacts</span>
                    <span class="fa fa-caret-down"></span>
                  </div>
                  <div class="dropdown-menu">
                    <div class="dropdown-arrow"></div>
                    <a class="dropdown-item" id="select_switch_displayed" href="#" data-turbo="false">Select Displayed</a>

                    <% if presenter.client.my_contacts_group_actions_all_allowed %>
                      <a class="dropdown-item" id="select_switch_all" href="#" data-turbo="false">Select All <%= Contact.model_name.human(count: presenter.contacts.total_count) -%></a>
                    <% end %>

                    <a class="dropdown-item" id="select_switch_reverse" href="#" data-turbo="false">Reverse Selection</a>
                    <a class="dropdown-item" id="select_switch_none" href="#" data-turbo="false">Unselect All</a>
                  </div>
                </div>
              </div>
            </th>
          </tr>
        <% end %>
        <tr>
          <th colspan="<%= presenter.broadcast ? 3 : 2 -%>" class="align-left">
            <%= render partial: 'snippets/sort_column', locals: {
                  column_heading:     'Last Name',
                  column_name:        'lastname',
                  next_sort_dir:      presenter.new_sort_dir,
                  selected_column:    @user_setting.data.dig(:sort, :col).to_s,
                  selected_direction: @user_setting.data.dig(:sort, :dir).to_s
                } %>
          </th>
          <th class="align-left">
            <%= render partial: 'snippets/sort_column', locals: {
                  column_heading:     'First Name',
                  column_name:        'firstname',
                  next_sort_dir:      presenter.new_sort_dir,
                  selected_column:    @user_setting.data.dig(:sort, :col).to_s,
                  selected_direction: @user_setting.data.dig(:sort, :dir).to_s
                } %>
          </th>
          <th class="align-right d-none d-md-table-cell">
            <%= render partial: 'snippets/sort_column', locals: {
                  column_heading:     'Created',
                  column_name:        'created_at',
                  next_sort_dir:      presenter.new_sort_dir,
                  selected_column:    @user_setting.data.dig(:sort, :col).to_s,
                  selected_direction: @user_setting.data.dig(:sort, :dir).to_s
                } %>
          </th>
          <th style="min-width:130px;"></th>
        </tr>
      </thead>

      <tbody>
        <%= render partial: 'my_contacts/broadcast/contact', collection: presenter.contacts, as: :contact, locals: { broadcast: presenter.broadcast, presenter: } %>
      </tbody>
    </table>
  </div>

  <%= render partial: 'snippets/paginate', locals: {
        page_label:  'Contacts per page',
        per_page:    @user_setting.data[:per_page],
        object:      presenter.contacts,
        path_params: { controller: 'my_contacts', action: 'contacts', id: @user_setting.id, broadcast: presenter.broadcast },
        div_class:   'justify-content-end',
        remote:      false,
        turbo:       true
      } %>
<% else %>
  <div>
    Contacts were NOT found meeting the selected filters.
  </div>
<% end %>

<script>
  $(function() {
    $(document).off('change', '#select_switch');
    $(document).on('change', '#select_switch', function() {
      if ($('#select_switch').is(':checked')) {
        $('#select_switch').val('true');
        selectContacts('all');
      } else {
        $('#select_switch').val('false');
        selectContacts('none');
      }

      if (typeof updateTimeToComplete == 'function') updateTimeToComplete();
    });

    $(document).off('click', '#select_switch_displayed');
    $(document).on('click', '#select_switch_displayed', function(e) {
      $('#select_switch').prop('checked', false);
      $('#select_switch').val('false');
      selectContacts('displayed');
      if (typeof updateTimeToComplete == 'function') updateTimeToComplete();
    });

    $(document).off('click', '#select_switch_reverse');
    $(document).on('click', '#select_switch_reverse', function(e) {
      $('#select_switch').prop('checked', false);
      $('#select_switch').val('false');
      selectContacts('reverse');
      if (typeof updateTimeToComplete == 'function') updateTimeToComplete();
    });

    $(document).off('click', '#select_switch_all');
    $(document).on('click', '#select_switch_all', function(e) {
      $('#select_switch').prop('checked', true);
      $('#select_switch').val('true');
      selectContacts('all');
      if (typeof updateTimeToComplete == 'function') updateTimeToComplete();
    });

    $(document).off('click', '#select_switch_none');
    $(document).on('click', '#select_switch_none', function(e) {
      $('#select_switch').prop('checked', false);
      $('#select_switch').val('false');
      selectContacts('none');
      if (typeof updateTimeToComplete == 'function') updateTimeToComplete();
    });

    SortColumn({
      'path':   '<%= my_contacts_contacts_path -%>',
      'next_sort_dir': '<%= presenter.new_sort_dir -%>',
      'params': {
        'id': '<%= @user_setting.id -%>',
        'broadcast': '<%= presenter.broadcast -%>'
      },
      'turbo': true
    });

    $('.tooltip').remove();

    Looper.init();
  });

  function countSelectedContacts() {
    // selectedContactsCount is found in app/views/my_contacts/broadcast/_contacts.html.erb
    var selected_count = selectedContactsCount();

    if (selected_count) {
      $('#select_switch_selected_count').html(selected_count + ' selected');
      $('#contacts_submit').prop('disabled', false);
    } else {
      $('#select_switch_selected_count').html('Select Contacts');
      $('#contacts_submit').prop('disabled', true);
    }
  }

  function selectContacts(action) {
    $('.user_action_select').each(function(e) {
      if (action == 'displayed') {
        $(this).prop('checked', true);
      } else if (action == 'none') {
        $(this).prop('checked', false);
      } else if (action == 'reverse') {
        $(this).prop('checked', $(this).is(':checked') == false);
      } else if (action == 'all') {
        $(this).prop('checked', true);
      }
    });

    countSelectedContacts();
  }

  function selectedContactsCount() {
    var selected_count = 0;

    if ($('#select_switch').is(':checked')) {
      selected_count = <%= presenter.contacts.total_count %>;
    } else {
      $('.user_action_select').each(function(e) {
        selected_count += $(this).is(':checked') ? 1 : 0;
      });
    }

    return selected_count;
  }
</script>
